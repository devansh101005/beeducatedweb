
// learn more about it in the docs: https://pris.ly/d/prisma-schema



datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")

}

generator client {
  provider = "prisma-client-js"
}



model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
}

enum Role {
  STUDENT
  TUTOR
  ADMIN
}

model Student {
  id          String   @id @default(uuid())
  studentId   String   @unique  // Student ID (e.g., "2024CS001")
  name        String
  email       String?  @unique
  phone       String?
  dateOfBirth DateTime // For birthday authentication
  gradeLevel  String   // e.g., "Class 12", "B.Tech 2nd Year"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model StudentApplication {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  phone       String
  address     String
  gradeLevel  String
  resume      String?
  marksheets  String[]  // Array of file paths
  idcards     String[]  // Array of file paths
  createdAt   DateTime  @default(now())
}

model TutorApplication {
  id               Int      @id @default(autoincrement())
  name             String
  email            String
  phone            String
  qualification    String
  subjectExpertise String
  experienceYears  Int
  resume           String?
  idcards          String[]  // Array of file paths
  createdAt        DateTime  @default(now())
}

model StudyMaterial {
  id         String   @id @default(uuid())
  title      String
  url        String
  category   String   // e.g., JEE, NEET, NDA
  classLevel String   // e.g., Class-12, Nursery
  createdAt  DateTime @default(now())
}


model OfflineStudent {
  id        String   @id
  phone     String   @unique
  otp       String?
  createdAt DateTime @default(now())
}


